name: Build and Deploy to Cloud Run
on:
  push:
    branches: 
      - $default-branch
      - matt-dev
env:
  PROJECT_ID: fdai-gpt-agents
  GAR_LOCATION: us-central1
  SERVICE: agent-service
  APP_NAME: agent-service
  GCP_SA_EMAIL: 
  GCP_SA_KEY_SECRET: 
  REGION: us-cenral1
  
jobs:
  deploy:
    permissions:
      packages: write
      contents: read
      id-token: write
      
    runs-on: ubuntu-latest
    environment: IaaC & GCP deployment
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }} 
          # projects/654945134456/locations/global/workloadIdentityPools/github-wif-pool/providers/githubwif #
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}  
          # service-wif@ezout-services.iam.gserviceaccount.com
          
      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
      
      # - name: gcr.io/cloud-builders/docker
      #   run: gcloud artifacts repositories create ${{ env.SERVICE }} --repository-format=docker --location=us-central1
        
      - name: gcr.io/cloud-builders/docker
        id: 'fdai-agent-api'
        run: |-
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.APP_NAME }}:latest ./surface-agents --no-cache
        
      - name: gcr.io/cloud-builders/docker
        run: |-
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.APP_NAME }}:latest"
          
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{  env.SERVICE }}/${{  env.APP_NAME }}:latest
          env_vars: |
            GCP_PROJECT=${{  env.GCP_PROJECT }}
            SECRET_ID=${{  env.GCP_SA_EMAIL }}
            GCP_SA_EMAIL=${{  env.GCP_SA_EMAIL }}
          secrets: |
            /run/secrets/GCP_SA_KEY=${{  env.GCP_SA_KEY_SECRET }}:latest
          flags: --concurrency=1000 --memory 2Gi --port 8000 --description "invoice gpt related merchant service" --allow-unauthenticated --platform managed --min-instances 1 --region us-central1 --timeout=1200
      
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}